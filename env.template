# ═══════════════════════════════════════════════════════════════════════════════════════
# FUSIONBRIDGE ENVIRONMENT CONFIGURATION
# Cross-chain bridge between Ethereum and Stellar
# 
# SETUP INSTRUCTIONS:
# 1. Copy this file to .env in the root directory: cp env.template .env
# 2. Replace placeholder values with your actual configuration
# 3. NEVER commit .env to git (already in .gitignore)
# ═══════════════════════════════════════════════════════════════════════════════════════

# Environment mode (development, staging, production)
NODE_ENV=

# Active networks (testnet for development, mainnet for production)
ETHEREUM_NETWORK=
STELLAR_NETWORK=

# ──────────────────────────────────────────────────────────────────────────────────────
# ETHEREUM CONFIGURATION
# ──────────────────────────────────────────────────────────────────────────────────────

# Ethereum RPC URLs (Get from Infura, Alchemy, or other providers)
ETHEREUM_RPC_URL=
MAINNET_RPC_URL=

# Private keys (GENERATE NEW KEYS - NEVER use examples!)
RELAYER_PRIVATE_KEY=

# Smart contract addresses (Will be filled after deployment)
HTLC_CONTRACT_ADDRESS=

# Etherscan API key for contract verification
ETHERSCAN_API_KEY=

# ──────────────────────────────────────────────────────────────────────────────────────
# STELLAR CONFIGURATION
# ──────────────────────────────────────────────────────────────────────────────────────

# Stellar Horizon URLs
STELLAR_HORIZON_URL=
STELLAR_NETWORK_PASSPHRASE=

# Stellar account keys (GENERATE NEW KEYS - NEVER use examples!)
RELAYER_STELLAR_SECRET=
RELAYER_STELLAR_PUBLIC=

# ──────────────────────────────────────────────────────────────────────────────────────
# RELAYER SERVICE CONFIGURATION
# ──────────────────────────────────────────────────────────────────────────────────────

# Relayer service settings
RELAYER_PORT=
RELAYER_POLL_INTERVAL=
RELAYER_RETRY_ATTEMPTS=
RELAYER_RETRY_DELAY=

# Event monitoring
START_BLOCK_ETHEREUM=
START_LEDGER_STELLAR=

# Fee settings (in basis points, 100 = 1%)
RELAYER_FEE_RATE=

# Development flags
ENABLE_MOCK_MODE=
DEBUG=

# ──────────────────────────────────────────────────────────────────────────────────────
# FRONTEND CONFIGURATION
# ──────────────────────────────────────────────────────────────────────────────────────

# Frontend server
VITE_APP_PORT=
VITE_APP_HOST=

# API endpoints
VITE_API_BASE_URL=
VITE_WS_URL=

# Wallet configuration
VITE_WALLET_CONNECT_PROJECT_ID=
VITE_ENABLE_TESTNET=

# Feature flags
VITE_ENABLE_PARTIAL_FILLS=
VITE_ENABLE_MULTI_TOKEN=

# ──────────────────────────────────────────────────────────────────────────────────────
# SECURITY SETTINGS
# ──────────────────────────────────────────────────────────────────────────────────────

# HTLC timelock constraints (in seconds)
MIN_TIMELOCK_DURATION=
MAX_TIMELOCK_DURATION=
DEFAULT_TIMELOCK_DURATION=

# Security thresholds
MAX_ORDER_AMOUNT=
MIN_CONFIRMATION_BLOCKS=
STELLAR_MIN_CONFIRMATIONS=

# Emergency controls
EMERGENCY_SHUTDOWN=
MAINTENANCE_MODE=

# ──────────────────────────────────────────────────────────────────────────────────────
# MONITORING & LOGGING
# ──────────────────────────────────────────────────────────────────────────────────────

# Logging configuration
LOG_LEVEL=
ENABLE_REQUEST_LOGGING=
VERBOSE_LOGGING=

# Health checks
HEALTH_CHECK_INTERVAL=
HEALTH_CHECK_TIMEOUT= 